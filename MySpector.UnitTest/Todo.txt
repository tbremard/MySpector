+Transformation: Replace(text, old, new) : DONE

+Check : 
textDoContain    : Done
textDoNotContain : Done
NumberIsGreater  : Done
NumberIsLess     : Done
NumberIsEqual    : Done

+ ExtractionFactory           : Done
+ Download html               : Done
+ Daily analysis on 4 targets : Done
+ Expose result via webservice
+ Expose Result by iframe

+TransformerFactory				: Done : text to number is a xtraxRule

+Notifier
StubNotifier     : Done
MailNotifier     : Problem : need Smtp Tls server
WebCallback      :     -----------------------------------------------------2
TwitterNotifier  :

textToNumber must be an element of Xtrax : Done
xtrax: implement replace() : done
xtrax: GetLen(dataTruck)    -----------------------------------------------

Checker must be available on text : Contains / DoNotContain
create test to isolate Title with Between operator   : Done
create use case to check if number Greater than reference(Allianz oblig) : Done  
create use case to check if number is Different than reference           : Done  

Rename "XtraxRule" to "Trox"
ConsoleRunner    : Done

Database : each Ressource can be linked to a set of pipelines
a pipeline do not need to have a checker or notifier: it can only save data
it is possible to construct indicrect pipelines : the input of an indirect pipeline is the output of another pipeline
use case: an indicrect pipeline can find the minimum price on a set of pipelines

each pipeline is organized in a folder hierarchy with 'Composite pattern': there are Containers and items . a pipeline is an item



problem:
apply Chain on : Transform: Done (Transformer is an Xtraxer)
apply Chain on : Notifier ------------------------------------------------------3
bool Check(); must take input from Transform: Done: created DataTruck


todo:
each cell (Trox/checker) must log input / output
implement NumberIsDifferent
